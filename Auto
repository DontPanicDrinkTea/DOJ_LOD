Sub InitializeValues()Dim transletter As Document
Dim leadnamerange As RangeDim leadname As String
Dim bcLine As RangeDim filename As String
Dim LOfullName As StringDim LOfullRange As RangeDim LOfirstName As StringDim LOfirstRange As RangeDim LOlastName As StringDim LOlastRange As Range
Dim subjectName As StringDim nameOnFilerng1 As RangeDim nameOnFilerng2 As Range
Dim LOemail As String
Dim MailAddressRng As RangeDim MailAddressStr As String
Application.ScreenUpdating = False
Set transletter = ActiveDocument
'Change font colourCall changecolour(transletter.Range)
'Fix border under subject lineCall transFixBorder(transletter)
'Save formatted copy to networktransletter.Save
''''Here's all the extra stuff
'Save copy to desktop for attachmentsCall saveLocal
'get local file name for attachmentsfilename = transletter.fullname
'Find bc LineSet bcLine = setRange(transletter, "bc:" & Chr(9) & "*" & Chr(13), 0, 0)
'Find LO full nameSet LOfullRange = setRange(transletter, "bc:" & Chr(9) & "*,", 4, -1)LOfullName = LOfullRange.Text
'Set LO first nameSet LOfirstRange = setFirstName(LOfullRange)LOfirstName = LOfirstRange.Text
Set LOfullRange = setRange(transletter, "bc:" & Chr(9) & "*,", 4, -1)
'set LO last nameSet LOlastRange = setLastName(LOfullRange)LOlastName = LOlastRange.Text
'set name on FileSet nameOnFilerng1 = transletter.Tables(2).Range.Cells(2).Range.Paragraphs(1).RangeSet nameOnFilerng2 = transletter.Tables(2).Range.Cells(2).Range.Paragraphs(2).RangenameOnFilerng1.MoveEnd wdCharacter, -1nameOnFilerng2.MoveEnd wdCharacter, -1subjectName = nameOnFilerng1.Text & "  -  " & nameOnFilerng2.Text
'set mailing address for letter
Set MailAddressRng = setRange(transletter, "VIA REGULAR MAIL" & Chr(13) & Chr(13) & "*" & Chr(13) & Chr(13), 18, -2)mailaddressstring = MailAddressRng.Text
'''''''''''''''''''''''''''''''''''''''actually doing stuff
'print file copy with bc linetransletter.PrintOut copies:=1
bcLine.SelectbcLine.Cut
transletter.Save
'Find Counsel NameSet leadnamerange = setRange(transletter, "Yours truly," & Chr(13) & Chr(13) & Chr(13) & Chr(13) & "*" & Chr(13), 16, -1)    leadname = leadnamerange.Text    If leadname = "Maeve Baird" Then        Call sendWendyEmail(subjectName, filename)    Else       transletter.PrintOut copies:=1    End If
Selection.EndKey Unit:=wdStorySelection.MoveStart Unit:=wdCharacter, Count:=-2Selection.Collapse Direction:=wdCollapseEnd    Selection.PasteAndFormat (wdFormatOriginalFormatting)
'Call getAddress
transletter.Save
'Open LO spreadsheet to get email address, create email with letter attachmentDim XL As Object
transletter.Close savechanges:=wdSaveChanges
Set XL = CreateObject("Excel.Application")With XL    .Visible = True    .Workbooks.Open "C:\Users\evasmith\Desktop\LOemails.xlsm"    .Application.Run "DoStuff", leadname, LOfirstName, LOlastName, subjectName, filenameEnd With       Call DeleteCurrentDoc(filename)       End Sub
Sub saveLocal()
'Save local copy for attachments
    ChangeFileOpenDirectory "C:\Users\evasmith\Desktop\"    ActiveDocument.SaveAs2 filename:=ActiveDocument.Name, FileFormat:= _    wdFormatXMLDocument, LockComments:=False, Password:="", AddToRecentFiles _    :=True, WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts _    :=False, SaveNativePictureFormat:=False, SaveFormsData:=False, _       SaveAsAOCELetter:=False, CompatibilityMode:=12       End SubSub changecolour(docRange As Range)
' change colour of all text to black
docRange.Font.Color = -587137025   End SubSub transFixBorder(ActDoc As Document)
With ActDoc.Tables(2)
    .Borders(wdBorderTop).LineStyle = wdLineStyleNone    .Borders(wdBorderLeft).LineStyle = wdLineStyleNone    .Borders(wdBorderBottom).LineStyle = wdLineStyleNone    .Borders(wdBorderRight).LineStyle = wdLineStyleNone    .Borders(wdBorderVertical).LineStyle = wdLineStyleNone    .Borders(wdBorderDiagonalDown).LineStyle = wdLineStyleNone    .Borders(wdBorderDiagonalUp).LineStyle = wdLineStyleNone    .Select    End With
Selection.MoveDown Unit:=wdLine, Count:=1    With Selection.Borders(wdBorderTop)        .LineStyle = Options.DefaultBorderLineStyle        .LineWidth = Options.DefaultBorderLineWidth        .Color = Options.DefaultBorderColor    End With
End SubFunction setRange(searchRange As Document, searchStr As String, startMove As Integer, endMove As Integer) As Range    With searchRange.Content.Find        .Text = searchStr        .Replacement.Text = ""        .Forward = True        .Wrap = wdFindAsk        .Format = False        .MatchCase = False        .MatchWholeWord = False        .MatchWildcards = True        .MatchSoundsLike = False        .MatchAllWordForms = False        .Execute        If .Found = True Then Set setRange = .Parent    End With    setRange.MoveStart Unit:=wdCharacter, Count:=startMove    setRange.MoveEnd Unit:=wdCharacter, Count:=endMove
End FunctionFunction setFirstName(flName As Range) As Range
Dim sPosition As IntegerDim fnameEnd As Integer
sPosition = InStr(1, flName.Text, " ", 1)fnameEnd = -flName.Characters.Count + (sPosition - 1)Set setFirstName = flNamesetFirstName.MoveEnd Unit:=wdCharacter, Count:=fnameEnd
End FunctionFunction setLastName(flName As Range) As Range
Dim sPosition As IntegerDim lnameStart As IntegerDim sStart As Integer
sPosition = InStr(1, flName.Text, " ", 1)
sStart = 1Do Until InStr(sStart, flName, " ", 1) = 0    sPosition = InStr(sStart, flName, " ", 1)    sStart = sPosition + 1Loop
Set setLastName = flNamesetLastName.MoveStart Unit:=wdCharacter, Count:=sStart - 1
End Function'Function MBcheck(lname As String) As Boolean    Sub sendWendyEmail(subLine As String, attFilename As String)
Dim OutApp As ObjectDim OutMail As Object'Dim signature As String
Set OutApp = CreateObject("Outlook.Application")Set OutMail = OutApp.CreateItem(0)
With OutMail    .Display    .to = "Wendy.Thompson@justice.gc.ca"    .Subject = subLine    .HTMLBody = "Hello, Wendy <br> <br>" _    & "I have a transfer letter that requires Maeve's signature. I've attached a copy of the letter without the bc line included. Could you please add Maeve's signature to this copy and email it back to me?<br><br>" _    & "Thanks for your help!"    .Attachments.Add attFilename    '.send    '.PrintOut    End WithSet OutMail = NothingSet OutApp = Nothing
End Sub
Sub DeleteCurrentDoc(delpath As String)
Dim Doc1 As DocumentDim deletepath As String
'get path of this document to delete it laterdeletepath = delpath
'Close the document we are going to delete (Word should remain Open'ActiveDocument.Close False
'Delete itKill (deletepath)
'Tidy up and close Word (Optional Line, delete if necessary)Application.Quit
End Sub

Sub getAddress()Dim addrng As RangeDim addstr As String
With ActiveDocument.Content.Find        .Text = "VIA REGULAR MAIL" & Chr(13) & Chr(13) & "*" & Chr(13) & Chr(13)        .Replacement.Text = ""        .Forward = True        .Wrap = wdFindAsk        .Format = False        .MatchCase = False        .MatchWholeWord = False        .MatchWildcards = True        .MatchSoundsLike = False        .MatchAllWordForms = False        .Execute        If .Found = True Then .Parent.Select        Selection.MoveStart Unit:=wdCharacter, Count:=18        Selection.MoveEnd Unit:=wdCharacter, Count:=-2        Set addrng = Selection.Range        Selection.Copy        End With    End Sub
Sub printLabel()
Dim wrdApp As ObjectDim wrdDoc As ObjectDim WordFileName As String
'mailstr.CopySet wrdApp = CreateObject("Word.Application")Set wrdDoc = wrdApp.Documents.Open("C:\Users\evasmith\Desktop\MailingLabel.docx")wrdDoc.ActivatewrdApp.Visible = True
With wrdDoc.Content.Find        .Text = "Test"        .Replacement.Text = ""        .Forward = True        .Wrap = wdFindAsk        .Format = False        .MatchCase = False        .MatchWholeWord = False        .MatchWildcards = True        .MatchSoundsLike = False        .MatchAllWordForms = False        .Execute        If .Found = True Then .Parent.Select        End With
'mailstr.PasteAndFormat (wdFormatPlainText)
End Sub
Sub copypastelabeltest()'' copypastelabeltest Macro''    Selection.Copy    Windows("MailingLabel.docx").Activate    Selection.PasteAndFormat (wdFormatPlainText)End Sub
